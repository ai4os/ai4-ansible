---
- name: Create certs zip
  hosts: consul
  become: true

  tasks:

    - include_vars: "../../../../group_vars/all.yml"
 
    - block:

      - name: "Generate token for each new consul agent"
        shell:
          cmd: consul acl token create -policy-name node-policy -description "Consul Agent Token" -node-identity "{{ item }}:{{ consul_dc_name }}" > /tmp/{{ item }}_consul_token
          creates: "/tmp/{{ item }}_consul_token"
        environment:
          CONSUL_HTTP_TOKEN: "{{ consul_token }}"
        loop:
          - server2
          - vnode-2

      - name: "Fetch consul server tokens from consul-master to ansible-master"
        fetch:
          src: "/tmp/{{ item }}_consul_token"
          dest: "/tmp/consul_fetched/"
          flat: yes
        loop:
          - server2
          - vnode-2

      - name: Create new certs dir
        command: cp -r /tmp/consul_fetched /tmp/{{ new_certs }}
        args:
          creates: /tmp/{{ new_certs }}
        delegate_to: localhost

      - name: "Generate token for each nomad server"
        shell: consul acl token create -policy-name nomad-server -description "Nomad Server Agent Token"  -node-identity "{{ item }}:{{ consul_dc_name }}"  > {{ item}}_nomad_token
        args:
          chdir: "/tmp"
          creates: "/tmp/{{ item}}_nomad_token"
        loop:
          - server2

      - name: "Generate token for each nomad client"
        shell: consul acl token create -policy-name nomad-client -description "Nomad Client Agent Token"  -node-identity "{{ item }}:{{ consul_dc_name }}"  > {{ item}}_nomad_token
        args:
          chdir: "/tmp"
          creates: "/tmp/{{ item}}_nomad_token"
        loop:
          - vnode-2

      - name: "Fetch nomad server tokens from consul-master to ansible-master"
        fetch:
          src: "/tmp/{{ item }}_nomad_token"
          dest: "/tmp/nomad_fetched/"
          flat: yes
        loop:
          - server2
          - vnode-2

      - name: Copy nomad certs
        shell: cp -r /tmp/nomad_fetched/* /tmp/{{ new_certs }}
        args:
          creates: /tmp/{{ new_certs }}/nomad-ca.pem
        delegate_to: localhost

      - name: Set new certs dir permissions
        file:
          path: /tmp/{{ new_certs }}
          state: directory
          mode: 0755
          recurse: yes
        delegate_to: localhost

      - name: Compress new certs dir
        archive:
          path: /tmp/{{ new_certs }}
          dest: "/tmp/{{ new_certs }}.zip"
          format: zip
        delegate_to: localhost

      when: ("consul_master" in groups and inventory_hostname in groups["consul_master"])

