- name: "Check if policies dir exists"
  stat:
    path: "{{ consul_policies_dir }}"
  register: consul_policies

- name: "Generate consul ACL bootstrap"
  shell: consul acl bootstrap > consul_bootstrap
  when: not consul_policies.stat.exists

- name: "Create policies dir if it does not exist"
  file:
    path: "{{ consul_policies_dir }}"
    state: directory

- name: "Get consul ACL token"
  shell: cat consul_bootstrap | grep -oP 'SecretID:\s+\K\S+'
  register: consul_token

- name: "Fetch consul ACL token from consul-master to ansible-master"
  fetch:
    src: "{{ path }}consul_bootstrap"
    dest: "{{ consul_fetched }}"
    flat: yes

- name: "Export consul token"
  lineinfile:
    path: "{{ environment_file }}"
    line: "{{ item }}{{ consul_token.stdout }}"
  with_items:
    - export CONSUL_HTTP_TOKEN=
 
- name: "Set exports"
  become: false
  shell: ". {{ environment_file }}"

- name: "Define consul policies"
  template:
    src: templates/consul_node_policy.j2
    dest: "{{ consul_policies_dir }}/node-policy.hcl"
    owner: ubuntu

- name: "Create consul policies"
  shell: consul acl policy create -name "{{ item }}" -description "Consul Client Policy" -rules @"{{ consul_policies_dir }}/node-policy.hcl"
  with_items:
    - node-policy
  when: not consul_policies.stat.exists

- name: "Generate token for each consul agent"
  shell: consul acl token create -policy-name node-policy -description "Consul Agent Token" -node-identity "{{ item }}:{{ consul_dc_name }}" > {{ item}}_consul_token
  loop: "{{ groups['consul'] }}" 
  when: not consul_policies.stat.exists

- name: "Fetch each consul agent token from consul-master to ansible-master"
  fetch:
    src: "{{ path }}{{ item }}_consul_token"
    dest: "{{ consul_fetched }}"
    flat: yes
  loop: "{{ groups['consul'] }}"
